{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"],"fields":{"title":{"boost":1000.0},"text":{"boost":1.0},"tags":{"boost":1000000.0}}},"docs":[{"location":"","title":"OpenBAS Documentation Space","text":"<p>Welcome to the OpenBAS Documentation space. Here you will be able to find all documents, meeting notes and presentations about the platform.</p> <p>Release notes</p> <p>Please, be sure to also take a look at the OpenBAS releases notes, they may contain important information about releases and deployments.</p>"},{"location":"#introduction","title":"Introduction","text":"<p>OpenBAS is an open source platform allowing organizations to plan, schedule and conduct crisis exercises as well as adversary and breach simulations. OpenBAS is an ISO 22398 compliant product and has been designed as a modern web application including a RESTFul API and an UX oriented frontend.</p>"},{"location":"#getting-started","title":"Getting started","text":"<ul> <li> <p> Deployment &amp; Setup</p> <p>Learn how to deploy and configure the platform as well as launch connectors to get the first data in OpenBAS.</p> <p> Deploy now</p> </li> <li> <p> User Guide</p> <p>Understand how to use the platform, create exercises and campaigns, use  media pressure simulation and integrate with other tools. </p> <p> Explore</p> </li> <li> <p> Administration</p> <p>Know how to administrate OpenBAS, create users and groups using RBAC / segregation, customize the overall experience.</p> <p> Customize</p> </li> </ul> <p>Need more help?</p> <p>We are doing our best to keep this documentation complete, accurate and up to date. </p> <p>If you still have questions or you find something which is not sufficiently explained, join the Filigran Community on Slack.</p>"},{"location":"#latest-blog-posts","title":"Latest blog posts","text":"<p>All tutorials are published directly on the Medium blog, this section provides a comprehensive list of the most important ones.</p> <ul> <li> <p>How we are disrupting tactical and strategical crisis management exercises with OpenBAS 3 <sub><sup>Oct 10, 2022</sup></sub></p> <p>It\u2019s been a while since we\u2019ve talked about OpenBAS and yet\u2026 In the trying times we live in, both in cyberspace and in real life, crisis preparedness has become...</p> <p> Read</p> </li> <li> <p>Plan, execute and conduct your crisis management exercises <sub><sup>Jan 25, 2021</sup></sub></p> <p>More than 3 years ago, we decided to build the OpenBAS application which allows organizations to facilitate the planning of crisis management...</p> <p> Read</p> </li> </ul>"},{"location":"#additional-resources","title":"Additional resources","text":"<p>Below, you will find external resources which may be useful along your OpenBAS journey.</p> <p> Training Courses Training courses for analysts and administrators in the Filigran training center.</p> <p></p>"},{"location":"administration/enterprise/","title":"Enterprise Edition","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p>"},{"location":"administration/introduction/","title":"Introduction","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p>"},{"location":"administration/parameters/","title":"Parameters","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p>"},{"location":"administration/policies/","title":"Policies","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p>"},{"location":"administration/users/","title":"Users and RBAC","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p>"},{"location":"deployment/authentication/","title":"Authentication","text":""},{"location":"deployment/authentication/#introduction","title":"Introduction","text":"<p>Welcome to the authentication documentation for OpenBAS. This documentation provides details on setting up and utilizing the authentication system, which supports multiple authentication methods to cater to different user needs and security requirements.</p>"},{"location":"deployment/authentication/#supported-authentication-methods","title":"Supported Authentication Methods","text":""},{"location":"deployment/authentication/#username-password","title":"Username-Password","text":"<p>Simple local authentication.</p>"},{"location":"deployment/authentication/#oauth-openid-and-saml2","title":"OAuth (OpenID) and SAML2","text":"<p>OAuth (OpenID) authentication and SAML2 enable secure and streamlined Single Sign-On (SSO) by allowing users to authenticate using external identity providers or their organization's identity providers.</p>"},{"location":"deployment/authentication/#getting-started","title":"Getting Started","text":"<p>Before you can start using any authentication method, follow these steps to set up the authentication system.</p>"},{"location":"deployment/authentication/#environment-variables","title":"Environment Variables","text":"<p>The authentication system relies on environment variables to function correctly.</p>"},{"location":"deployment/authentication/#usernamepassword-environment-variables","title":"Username/Password Environment Variables","text":"<ul> <li><code>OPENBAS.AUTH-LOCAL-ENABLE</code>: Set this to <code>true</code> to enable username/password authentication.</li> </ul>"},{"location":"deployment/authentication/#oauth-openid-environment-variables","title":"OAuth (OpenID) Environment Variables","text":"<ul> <li><code>OPENBAS.AUTH-OPENID-ENABLE</code>: Set this to <code>true</code> to enable OAuth (OpenID) authentication.</li> <li>Example for Auth0 :</li> </ul> <pre><code>SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_{registrationId}_ISSUER-URI=https://auth.auth0.io/\nSPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_{registrationId}_CLIENT-NAME=Login with auth0\nSPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_{registrationId}_CLIENT-ID=\nSPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_{registrationId}_CLIENT-SECRET=\nSPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_{registrationId}_REDIRECT-URI=${openbas.base-url}/login/oauth2/code/{registrationId}\nSPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_{registrationId}_SCOPE=openid,profile,email\n</code></pre> <ul> <li>Example for Github (or others pre handled oauth2 providers) :</li> </ul> <pre><code>SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_{registrationId}_CLIENT_NAME=Login with Github\nSPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_{registrationId}_CLIENT_ID=\nSPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_{registrationId}_CLIENT_SECRET=\n</code></pre> <p>Tips</p> <p>{registrationId} is an arbitrary identifier you choose.</p>"},{"location":"deployment/authentication/#saml2-environment-variables","title":"SAML2 Environment Variables","text":"<ul> <li><code>OPENBAS.AUTH-SAML2-ENABLE</code>: Set this to <code>true</code> to enable SAML2 authentication.</li> <li>Example for Microsoft :</li> </ul> <pre><code>SPRING_SECURITY_SAML2_RELYINGPARTY_REGISTRATION_{registrationId}_ENTITY-ID=\nSPRING_SECURITY_SAML2_RELYINGPARTY_REGISTRATION_{registrationId}_ASSERTINGPARTY_METADATA-URI=\n\nOPENBAS_PROVIDER_{registrationId}_FIRSTNAME_ATTRIBUTE_KEY=\nOPENBAS_PROVIDER_{registrationId}_LASTNAME_ATTRIBUTE_KEY=\n</code></pre> <p>Tips</p> <p>{registrationId} is an arbitrary identifier you choose.   metadata-uri is the uri of the xml file given by your identity provider</p>"},{"location":"deployment/authentication/#single-sign-on-url","title":"Single Sign On URL","text":""},{"location":"deployment/authentication/#saml2","title":"SAML2","text":"<p>Url for the config of your sso provider <pre><code>${openbas.base-url}/login/saml2/sso/{registrationId}\n</code></pre></p>"},{"location":"deployment/authentication/#administrative-access","title":"Administrative Access","text":"<p>To grant administrative roles, you can utilize OAuth and SAML2 integration. If you opt for this approach, you'll need to include the following variables:</p> <pre><code>OPENBAS_PROVIDER_{registrationId}_ROLES_PATH=\nOPENBAS_PROVIDER_{registrationId}_ROLES_ADMIN=\n</code></pre> <p>However, if you intend to manage administrative roles within the OpenBAS platform itself, there's no need to provide these variables.</p>"},{"location":"deployment/authentication/#error-handling","title":"Error Handling","text":"<p>Under construction</p> <p>We are doing our best to complete this page.  If you want to participae, dont hesitate to join the Filigran Community on Slack  or submit your pull request on the Github doc repository.</p>"},{"location":"deployment/clustering/","title":"Clustering","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p>"},{"location":"deployment/configuration/","title":"Configuration","text":"<p>The purpose of this section is to learn how to configure OpenBAS to have it tailored for your production and development needs.</p> <p>OpenBAS is a JAVA process and therefore can be configured manually using the configuration file <code>application.properties</code> or environment variables when using Docker.</p>"},{"location":"deployment/configuration/#platform","title":"Platform","text":""},{"location":"deployment/configuration/#basic-parameters","title":"Basic parameters","text":"Parameter Environment variable Default value Description server.address SERVER_ADDRESS 0.0.0.0 Listen address of the application server.port SERVER_PORT 8080 Listen port of the application openbas.base-url OPENBAS_BASE-URL http://localhost:8080 Base URL of the application, will be used in some email links server.servlet.session.timeout SERVER_SERVLET_SESSION_TIMEOUT 20m Default duration of session (20 minutes) openbas.cookie-secure OPENBAS_COOKIE-SECURE false Turn on if the access is done in HTTPS openbas.admin.email OPENBAS_ADMIN_EMAIL admin@openbas.io Default login email of the admin user openbas.admin.password OPENBAS_ADMIN_PASSWORD ChangeMe Default password of the admin user openbas.admin.token OPENBAS_ADMIN_TOKEN ChangeMe Default token (must be a valid UUIDv4)"},{"location":"deployment/configuration/#network-and-security","title":"Network and security","text":"Parameter Environment variable Default value Description server.ssl.enabled SERVER_SSL_ENABLED false Turn on to enable SSL on the local server server.ssl.key-store-type SERVER_SSL_KEY-STORE-TYPE PKCS12 Type of SSL keystore server.ssl.key-store SERVER_SSL_KEY-STORE classpath:localhost.p12 SSL keystore path server.ssl.key-store-password SERVER_SSL_KEY-STORE-PASSWORD admin SSL keystore password server.ssl.key-alias SERVER_SSL_KEY-ALIAS localhost SSL key alias"},{"location":"deployment/configuration/#logging","title":"Logging","text":"Parameter Environment variable Default value Description logging.level.root LOGGING_LEVEL_ROOT fatal Root log level logging.level.io.openbas LOGGING_LEVEL_IO_OPENBAS warn OpenBAS log level logging.file.name LOGGING_FILE_NAME ./logs/openbas.log Log file path (in addition to console output)"},{"location":"deployment/configuration/#dependencies","title":"Dependencies","text":""},{"location":"deployment/configuration/#postgresql","title":"PostgreSQL","text":"Parameter Environment variable Default value Description spring.datasource.url SPRING_DATASOURCE_URL jdbc:postgresql://... URL of the database (ex jdbc:postgresql://postgresql.mydomain.com:5432/openbas) spring.datasource.username SPRING_DATASOURCE_USERNAME openbas Login for the database spring.datasource.password SPRING_DATASOURCE_PASSWORD password Password for the database"},{"location":"deployment/configuration/#s3-bucket-minio","title":"S3 bucket / MinIO","text":"Parameter Environment variable Default value Description minio.endpoint MINIO_ENDPOINT localhost Hostname of the S3 instance minio.bucket MINIO_BUCKET openbas Name of the S3 bucket minio.port MINIO_PORT 9000 Port of the S3 endpoint minio.access-key MINIO_ACCESS-KEY key S3 bucket access key (MinIO user) minio.access-secret MINIO_ACCESS-SECRET secret S3 bucket access secret (MinIO password)"},{"location":"deployment/configuration/#mailbox","title":"Mailbox","text":"<p>For the associated mailbox, for the moment the platform only relies on IMAP / SMTP protocols, we are actively developing integrations with APIs such as O365 and Google Apps.</p>"},{"location":"deployment/configuration/#imap","title":"IMAP","text":"Parameter Environment variable Default value Description openbas.mail.imap.enabled OPENBAS_MAIL_IMAP_ENABLED false Turn on to enable IMAP mail synchronization. Injector email must be well configured openbas.mail.imap.host OPENBAS_MAIL_IMAP_HOST imap.mail.com IMAP Server hostname openbas.mail.imap.port OPENBAS_MAIL_IMAP_PORT 993 IMAP Server port openbas.mail.imap.username OPENBAS_MAIL_IMAP_USERNAME username@mail.com IMAP Server username openbas.mail.imap.password OPENBAS_MAIL_IMAP_PASSWORD password IMAP Server password openbas.mail.imap.inbox OPENBAS_MAIL_IMAP_INBOX INBOX IMAP inbox directory to synchronize from openbas.mail.imap.sent OPENBAS_MAIL_IMAP_SENT Sent IMAP sent directory to synchronize from Parameter Environment variable Default value Description openbas.mail.imap.ssl.enable OPENBAS_MAIL_IMAP_SSL_ENABLE true Turn on IMAP SSL mode openbas.mail.imap.ssl.trust OPENBAS_MAIL_IMAP_SSL_TRUST * Trust unverified certificates openbas.mail.imap.auth OPENBAS_MAIL_IMAP_AUTH true Turn on IMAP authentication openbas.mail.imap.starttls.enable OPENBAS_MAIL_IMAP_STARTTLS_ENABLE true Turn on IMAP STARTTLS"},{"location":"deployment/configuration/#smtp","title":"SMTP","text":"Parameter Environment variable Default value Description spring.mail.host SPRING_MAIL_HOST smtp.mail.com SMTP Server hostname spring.mail.port SPRING_MAIL_PORT 587 SMTP Server port spring.mail.username SPRING_MAIL_USERNAME username@mail.com SMTP Server username spring.mail.password SPRING_MAIL_PASSWORD password SMTP Server password Parameter Environment variable Default value Description spring.mail.properties.mail.smtp.ssl.enable SPRING_MAIL_PROPERTIES_MAIL_SMTP_SSL_ENABLE true Turn on SMTP SSL mode spring.mail.properties.mail.smtp.ssl.trust SPRING_MAIL_PROPERTIES_MAIL_SMTP_SSL_TRUST * Trust unverified certificates spring.mail.properties.mail.smtp.auth SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH true Turn on SMTP authentication spring.mail.properties.mail.smtp.starttls.enable SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE true Turn on SMTP STARTTLS <p>Default file</p> <p>It is possible to check all default parameters implemented in the platform in the <code>application.properties</code> file.</p>"},{"location":"deployment/configuration/#injectors-integrations","title":"Injectors (integrations)","text":"<p>For specific injector configuration, you need to check each injector behavior.</p> <p>Injectors list</p> <p>If you are looking to the list of OpenBAS injectors or native integration, please check the OpenBAS Ecosystem.</p>"},{"location":"deployment/injectors/","title":"Injectors","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p>"},{"location":"deployment/installation/","title":"Installation","text":"<p>All components of OpenBAS are shipped both as Docker images and manual installation packages.</p> <p>Production deployment</p> <p>For production deployment, we recommend to deploy all components in containers, including dependencies, using native cloud services or orchestration systems such as Kubernetes.</p> <ul> <li> <p> Use Docker</p> <p>Deploy OpenBAS using Docker and the default <code>docker-compose.yml</code> provided in the docker.</p> <p> Setup</p> </li> <li> <p> Manual installation</p> <p>Deploy dependencies and launch the platform manually using the packages released in the GitHub releases.</p> <p> Explore</p> </li> </ul>"},{"location":"deployment/installation/#using-docker","title":"Using Docker","text":""},{"location":"deployment/installation/#introduction","title":"Introduction","text":"<p>OpenBAS can be deployed using the docker-compose command.</p>"},{"location":"deployment/installation/#pre-requisites","title":"Pre-requisites","text":"<p> Linux</p> <pre><code>$ sudo apt install docker-compose\n</code></pre> <p> Windows and MacOS</p> <p>Just download the appropriate Docker for Desktop version for your operating system.</p>"},{"location":"deployment/installation/#clone-the-repository","title":"Clone the repository","text":"<p>Docker helpers are available in the Docker GitHub repository.</p> <pre><code>$ mkdir -p /path/to/your/app &amp;&amp; cd /path/to/your/app\n$ git clone https://github.com/OpenBAS-Platform/docker.git\n$ cd docker\n</code></pre>"},{"location":"deployment/installation/#configure-the-environment","title":"Configure the environment","text":"<p>Before running the <code>docker-compose</code> command, the <code>docker-compose.yml</code> file should be configured. By default, the <code>docker-compose.yml</code> file is using environment variables available in the file <code>.env.sample</code>.</p> <p>You can either rename the file <code>.env.sample</code> in <code>.env</code> and put the expected values or just fill directly the <code>docker-compose.yml</code> with the values corresponding to your environment.</p> <p>Configuration static parameters</p> <p>The complete list of available static parameters is available in the configuration section.</p> <p>Whether you are using one method or the other, here are the mandatory parameters to fill:</p> <pre><code>POSTGRES_USER=ChangeMe\nPOSTGRES_PASSWORD=ChangeMe\nKEYSTORE_PASSWORD=ChangeMe\nMINIO_ROOT_USER=ChangeMeAccess\nMINIO_ROOT_PASSWORD=ChangeMeKey\nSPRING_MAIL_HOST=smtp.changeme.com\nSPRING_MAIL_PORT=25\nSPRING_MAIL_USERNAME=ChangeMe@domain.com\nSPRING_MAIL_PASSWORD=ChangeMe\nSPRING_MAIL_PROPERTIES_MAIL_SMTP_SSL_TRUST=*\nSPRING_MAIL_PROPERTIES_MAIL_SMTP_SSL_ENABLE=false\nSPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH=false\nSPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE=false\n# Should be remove if you have already an admin user and won't update it\nOPENBAS_ADMIN_EMAIL=ChangeMe\nOPENBAS_ADMIN_PASSWORD=ChangeMe\nOPENBAS_ADMIN_TOKEN=ChangeMe\n</code></pre> <p>If your <code>docker-compose</code> deployment does not support <code>.env</code> files, just export all environment variables before launching the platform:</p> <pre><code>$ export $(cat .env | grep -v \"#\" | xargs)\n</code></pre>"},{"location":"deployment/installation/#memory-management-settings","title":"Memory management settings","text":""},{"location":"deployment/installation/#postgresql","title":"PostgreSQL","text":"<p>PostgreSQL is the main database of OpenBAS. You can find more information in the official PostgresQL documentation.</p>"},{"location":"deployment/installation/#minio","title":"MinIO","text":"<p>MinIO is a small process and does not require a high amount of memory. More information are available for Linux here on the Kernel tuning guide.</p>"},{"location":"deployment/installation/#persist-data","title":"Persist data","text":"<p>The default for OpenBAS data is to be persistent.</p> <p>In the <code>docker-compose.yml</code>, you will find at the end the list of necessary persitent volumes for the dependencies:</p> <pre><code>volumes:\n  pgsqldata:\n  s3data:\n</code></pre>"},{"location":"deployment/installation/#run-openbas","title":"Run OpenBAS","text":""},{"location":"deployment/installation/#using-single-node-docker","title":"Using single node Docker","text":"<p>After changing your <code>.env</code> file run <code>docker-compose</code> in detached (-d) mode:</p> <pre><code>$ sudo systemctl start docker.service\n# Run docker-compose in detached \n$ docker-compose up -d\n</code></pre>"},{"location":"deployment/installation/#using-docker-swarm","title":"Using Docker swarm","text":"<p>In order to have the best experience with Docker, we recommend using the Docker stack feature. In this mode you will have the capacity to easily scale your deployment.</p> <pre><code># If your virtual machine is not a part of a Swarm cluster, please use:\n$ docker swarm init\n</code></pre> <p>Put your environment variables in <code>/etc/environment</code>:</p> <pre><code># If you already exported your variables to .env from above:\n$ sudo cat .env &gt;&gt; /etc/environment\n$ sudo bash -c 'cat .env &gt;&gt; /etc/environment\u2019\n$ sudo docker stack deploy --compose-file docker-compose.yml openbas\n</code></pre> <p>Installation done</p> <p>You can now go to http://localhost:8080 and log in with the credentials filled in your configuration.</p>"},{"location":"deployment/installation/#manual-installation","title":"Manual installation","text":""},{"location":"deployment/installation/#prepare-the-installation","title":"Prepare the installation","text":""},{"location":"deployment/installation/#installation-of-dependencies","title":"Installation of dependencies","text":"<p>You have to install all the needed dependencies for the main application and the workers. The example below if for Ubuntu:</p> <pre><code>$ sudo apt install openjdk-18-jre \n</code></pre>"},{"location":"deployment/installation/#download-the-application-files","title":"Download the application files","text":"<p>First, you have to download and extract the latest release file.</p> <pre><code>$ mkdir /path/to/your/app &amp;&amp; cd /path/to/your/app\n$ wget &lt;https://github.com/OpenBAS-Platform/openbas/releases/download/{RELEASE_VERSION}/openbas-release-{RELEASE_VERSION}.tar.gz&gt;\n$ tar xvfz openbas-release-{RELEASE_VERSION}.tar.gz\n</code></pre>"},{"location":"deployment/installation/#install-the-main-platform","title":"Install the main platform","text":""},{"location":"deployment/installation/#configure-the-application","title":"Configure the application","text":"<p>The main application has just one environment configuration file to change.</p> <pre><code>$ cd openbas\n</code></pre> <p>Change the application.properties file according to your configuration of PostgreSQL, Minio, admin account and to your platform.</p>"},{"location":"deployment/installation/#start-the-application","title":"Start the application","text":"<p>Start the Application:</p> <pre><code>$ java -jar openbas-api.jar\n</code></pre> <p>You should now be able to access to the platform using the IP and the port defined in the configuration (by default: http://localhost:8080).</p> <p>The default username and password are the ones you have put in your configuration.</p>"},{"location":"deployment/integrations/","title":"Integrations","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p>"},{"location":"deployment/overview/","title":"Overview","text":"<p>Before starting the installation, let's discover how OpenBAS is working, which dependencies are needed and what are the minimal requirements to deploy it in production.</p>"},{"location":"deployment/overview/#architecture","title":"Architecture","text":"<p>The OpenBAS platform relies on several external databases and services in order to work.</p> <p></p>"},{"location":"deployment/overview/#platform","title":"Platform","text":"<p>The platform is the central part of the OpenBAS platform, allowing users to configure exercises and campaigns as well as systems and players.</p>"},{"location":"deployment/overview/#injectors","title":"Injectors","text":"<p>All injectors are shipped within the platform but are not enabled by default. Injectors are used to interact with third-party applications and services such as social medias, cyber ranges, cybersecurity products, etc.</p> <p>List of connectors</p> <p>You can find all currently available connector in the OpenBAS Ecosystem.</p>"},{"location":"deployment/overview/#infrastructure-requirements","title":"Infrastructure requirements","text":""},{"location":"deployment/overview/#dependencies","title":"Dependencies","text":"Component Version CPU RAM Disk type Disk space PostgreSQL \u2265 16.0 2 cores \u2265 8GB SSD \u2265 16GB S3 / MinIO \u2265 RELEASE.2023-02 1 core \u2265 128MB SSD \u2265 16GB"},{"location":"deployment/overview/#platform_1","title":"Platform","text":"Component CPU RAM Disk type Disk space OpenBAS Core 2 cores \u2265 8GB None (stateless) -"},{"location":"deployment/resources/","title":"Resources","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p>"},{"location":"deployment/troubleshooting/","title":"Troubleshooting","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p>"},{"location":"deployment/upgrade/","title":"Upgrade","text":"<p>Depending on your installation mode, upgrade path may change.</p> <p>Migrations</p> <p>The platform is taking care of all necessary underlying migrations in the databases if any, you can upgrade OpenBAS from any version to the latest one, including skipping multiple major releases.</p>"},{"location":"deployment/upgrade/#using-docker","title":"Using Docker","text":"<p>Before applying this procedure, please update your <code>docker-compose.yml</code> file with the new version number of container images.</p>"},{"location":"deployment/upgrade/#for-single-node-docker","title":"For single node Docker","text":"<pre><code>$ sudo docker-compose stop\n$ sudo docker-compose pull\n$ sudo docker-compose up -d\n</code></pre>"},{"location":"deployment/upgrade/#for-docker-swarm","title":"For Docker swarm","text":"<p>For each of services, you have to run the following command:</p> <pre><code>$ sudo docker service update --force service_name\n</code></pre>"},{"location":"deployment/upgrade/#manual-installation","title":"Manual installation","text":"<p>When upgrading the platform, you have to replace all files and restart the platform, the database migrations will be done automatically:</p> <pre><code>$ java -jar openbas-api.jar\n</code></pre>"},{"location":"development/api-usage/","title":"REST API","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p>"},{"location":"development/environment_ubuntu/","title":"Prerequisites Ubuntu","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p>"},{"location":"development/environment_windows/","title":"Prerequisites Windows","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p>"},{"location":"development/injectors/","title":"Injector development","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p>"},{"location":"development/platform/","title":"Platform development","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p>"},{"location":"usage/assets/","title":"Assets","text":"<p>The Assets section provides users with a centralized hub for managing and organizing the entities targeted for testing and simulation. </p> <p>When you click on \u201cAssets\u201d in the left-hand banner, you see all the \u201cAssets\u201d pages. When accessing the Assets section, users are directed by default to the Endpoints page, where they can start managing their assets.</p> <p>From the <code>Assets</code> section, users can access the following pages:</p> <ul> <li><code>Endpoints</code>: Individual entities, representing any object or terminal that can be connected to a network.</li> <li><code>Asset groups</code>: Group of asset allowing you to organize endpoints into logical groups based on various filters applied by the user.</li> </ul>"},{"location":"usage/assets/#endpoints","title":"Endpoints","text":"<p>Endpoints encompass devices and systems that connect to a network, serving as the foundation for interaction with OpenBAS. </p> <p>The list of endpoints continues to grow with the changing landscape of networked technologies and the increasing interconnectivity of digital ecosystems. Below is a non-exhaustive list of terminal categories:</p> <ul> <li>Computers: This category encompasses a wide range of computing devices, including desktops, laptops, and servers deployed within organizational networks.</li> <li>Mobile devices: Smartphones and tablets represent another prominent category of endpoints, providing users with mobile access to network resources and services.</li> <li>Workstations: Workstations refer to terminals or dedicated machines utilized by individuals or groups to perform specific tasks or access networked resources. These systems are typically tailored to meet specific operational requirements and may include specialized software or configurations.</li> <li>IoT devices: The Internet of Things (IoT) encompasses a diverse array of interconnected devices and sensors. IoT endpoints include smart thermostats, cameras, environmental sensors, smart watches, and health tracking devices, among others.</li> </ul> <p>When accessing the Endpoints pages, you see the list of all endpoints imported in your platform. Here, users can create and manage details specific to each endpoint.</p> <p>Assets can be imported with the help of specific Collectors, like Microsoft Entra.</p> <p></p>"},{"location":"usage/assets/#asset-groups","title":"Asset groups","text":"<p>Asset groups serve as a mechanism for organizing and grouping related Endpoints. These groups are constructed based on filters that define the criteria for inclusion, allowing administrators to segment and categorize Endpoints based on common characteristics or attributes.</p> <p>When creating a new asset group, administrators have the flexibility to specify the filters that will delineate the group's membership. Currently, the platform offers a range of filters such as platform type, hostname, and IP addresses. We plan to extend the possibilities by including additional filters in future updates.</p> <p></p>"},{"location":"usage/atomic/","title":"Atomic testing","text":"<p>Under construction</p> <p>We are doing our best to complete this page.  If you want to participae, dont hesitate to join the Filigran Community on Slack  or submit your pull request on the Github doc repository.</p> <p>When clicking on Atomic testing in the left menu, you access to the list of all atomic testings ever launched in the platform.</p> <p>Atomic testing is a great way to simulate a singular attack technique you are particulary interested in, and test immediately your capability to prevent and detect it.</p> <p>You can search for a specific one by name.</p> <p>The presented list allows you to easily see global scores of all your recent atomic testings.</p> <p></p>"},{"location":"usage/atomic/#create-an-atomic-testing","title":"Create an Atomic testing","text":"<p>An atomic testing is essentially the simulation of a single inject, against a selection of targets (Players, Teams, Assets, Assets Group) with assorted expectations.</p> <p>By clicking on the + button at the bottom right of the screen, you enter the atomic testing creation workflow.</p> <p>On the left of the creation screen is the list of all available Inject you can play for atomic testing. Logos on the left of each line indicates which Injector is associated with each inject.</p> <p>Depending on your integrations, this list can be long. You can filter the list by compatible platforms or by Mitre Att&amp;ck tactics.By clicking on the \"Att&amp;CK\" logo near the search bar, you can also filter by selecting a precise Mitre Att&amp;ck techniques.</p> <p>When selecting an inject on the left, the form on the right populates itself with a by-default title and propose you to define when the inject should be played after the launch of the atomic testing. You can keep it to 0.</p> <p>By clicking on Inject content, you can define now or later the targeted assets or players, needed configurations, and the assorted expectations.</p> <p>The \"available variables\" button helps you to use already defined variables into compatible fields.</p>"},{"location":"usage/atomic/#atomic-testing-screens","title":"Atomic testing screens","text":"<p>Details of an Atomic testing is composed of three parts: - a header allowing to launch the test, see its state and update/delete it. - an Overview screen to eaily see the results of the test. - an execution details screen to see expectations of the test and investigate on execution logs</p>"},{"location":"usage/atomic/#overview","title":"Overview","text":"<p>The first screen displayed when you click on a specific Atomic testing from the list is a breakdown of your security posture against this test. </p> <p>As for Simulation and Scenario, Results are broken down into: - Prevention: the ability of your security posture to prevent the inject - Detection: the ability of your security posture to detect the inject - Human response: the ability of your security teams to react as intented facing the inject</p> <p>Big metrics on top of the screen sum up the expectations' result of all targets. </p> <p>The list of targets on the left allows you to easily see the result per Target, and for example investigate further why a specific Asset have failed the test.</p> <p>For a selected target, you can on the right the timeline of the test against the target and the assorted results. The result logs are also displayed.</p> <p></p>"},{"location":"usage/atomic/#execution-details","title":"Execution details","text":"<p>On this screen, you can retrieve details about the atomic testing and its expectations.</p> <p>You can also see the raw execution logs of the Injector responsible for the test execution.</p> <p></p>"},{"location":"usage/challenges/","title":"Challenges","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p>"},{"location":"usage/channels/","title":"Channels","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p> <p>In OpenBAS, Channels represent communication medias with a particular look. There are used to present web articles or other media contents to Players in a specific way.</p> <p>It helps give shape to your Scenario context and events.</p>"},{"location":"usage/channels/#create-a-channel","title":"Create a Channel","text":"<p>First step is to click on the + button at the bottom right and give your new Channel a type (Newspaper, Microblogging, TV Channel), a name and a subtitle.</p> <p>Once done, click on the Channel in the list to access its overview. Here you can define how media content associated to this Chennel will be displayed to Players.</p> <p>You can define primary and secondary colors, choose logos and define how the header is presented.</p> <p>On the right, a mock up of the overview is displayed to give you the look and fill of it.</p> <p></p>"},{"location":"usage/channels/#use-a-channel","title":"Use a Channel","text":"<p>A Channel will then be used in Scenario and in Simulation definition. When you create an Article, you have to choose the Channel that will give it an adequate shape.</p> <p>See Media pressure page to know how to create and add Articles to your Scenarios.</p> <p></p>"},{"location":"usage/collector-caldera/","title":"Caldera collector","text":"<p>The integration between an OpenBAS instance and a Caldera instance allows you to enrich assets data.</p>"},{"location":"usage/collector-caldera/#configuration-variables","title":"Configuration variables","text":"<p>Below are the properties you'll need to set for OpenBAS:</p> Property application.properties Docker environment variable Mandatory Description Enable Caldera collector collector.caldera.enable <code>COLLECTOR.CALDERA.ENABLE</code> Yes Enable the Caldera collector. Collector ID collector.caldera.id <code>COLLECTOR.CALDERA.ID</code> Yes The ID of the collector. Caldera URL collector.caldera.url <code>COLLECTOR.CALDERA.URL</code> Yes The URL of the Caldera instance. Caldera API Key collector.caldera.api-key <code>COLLECTOR.CALDERA.API-KEY</code> Yes The API Key for the rest API of the Caldera instance. Caldera polling interval collector.caldera.interval <code>COLLECTOR.CALDERA.INTERVAL</code> No The time interval in seconds where the collect is triggered. Default is 60 seconds."},{"location":"usage/collector-caldera/#behavior","title":"Behavior","text":"<p>Each interval, a job retrieves the deployed agents on Caldera and populates the OpenBAS database by creating Assets.</p> <p>Deduplication is done thanks to the caldera <code>paw</code> property :</p> <ul> <li>if there is no asset on OpenBAS based on this <code>paw</code>, a new asset is created</li> <li>if there is an asset on OpenBAS based on this <code>paw</code> and the source of creation is only Caldera, this asset is updated</li> </ul> <p>There is no automatic deletion of OpenBAS assets if Caldera agents no longer exist.</p>"},{"location":"usage/collector-caldera/#mapping","title":"Mapping","text":"Agent Property Asset Property paw externalId paw name host_ip_addrs ips platform platform last_seen lastSeen"},{"location":"usage/collectors/","title":"Collectors","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p>"},{"location":"usage/components/","title":"Components","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p>"},{"location":"usage/documents/","title":"Documents","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p>"},{"location":"usage/expectations/","title":"Expectations","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p> <p>Expectations are the mean to express what is expected from an Asset (endpoint) or a Players facing an Inject in terms of security posture. </p> <p>Expectations can be:</p> <ul> <li>Manual: the expectation is at the end of the animation team. its validation and score will be manually handled</li> <li>Automatic: the expectation's validation will be handled automatically under specific conditions</li> </ul> <p>Current available expectations are:</p> <ul> <li><code>Manual</code>: a simple customizable expectation to be validated manually.</li> <li><code>Automatic - Prevention: Triggred when inject is processed</code>: Automatically validated by security integration with compatible Collectors if the Inject's action generates a prevention alert, like a quarantine.</li> <li><code>Automatic - Detection: Triggred when inject is processed</code>: Automatically validated by security integration with compatible Collectors if the Inject's action generates a detection alert, like an incident.</li> <li><code>Automatic - Triggered when team reads articles</code>: Automatically validated when the article of a Media pressure inject has been read by targets.</li> </ul> <p>Note that the \"Publish Challenges\" Inject does not need Expectation. Results are computed directly from Challenges' scores.</p> <p>Each expectation has a score that represent how well the expectation has been met by the target.</p> <p>Some expectations can be validated in two mode when an Inject is targeting Asset groups:</p> <ul> <li>All assets (per group) must validate the expectation</li> <li>At least one asset (per group) must validate the expectation</li> </ul>"},{"location":"usage/expectations/#add-an-expectation-to-an-inject","title":"Add an expectation to an inject","text":"<p>For adding expectations to an Inject, open the Inject content and click on \"Add expectations\". Then select the type of expectation and set a score for it.</p> <p>You can add multiple expectations to an inject.</p>"},{"location":"usage/expectations/#validate-a-manual-expectation","title":"Validate a manual expectation","text":"<p>If you have configured manual expectations in your Scenario, you will have the opportunity to handle manual validations during each of its Simulation. During a Simulation, go to the Animation tab, under the Validation screen. You will see there the list of expectations that still need a manual validation.</p>"},{"location":"usage/exports/","title":"Exports","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p>"},{"location":"usage/getting-started/","title":"Getting started","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p> <p>This guide aims to give you a full overview of the OpenBAS features and workflows. The platform can be used in various contexts to handle Breach and Attack simulations at technical or strategical levels. OpenBAS has been designed as a part of the Filigran XTM suite and can be integrated with OpenCTI to generate meaningful attack scenario based on real threat. OpenBAS is result-oriented with many dashboard helping you to evaluate you securoty posture given a defined context.</p> <p>Here are some examples of use cases: - Designing attack scenario based on real threat - Evaluate your security posture against technical simulations on endpoints - Enhance team skills by evaluating them during simulations along with your security systems - Organize Capture The Flag with multiple challenges - Conduct atomic testing</p>"},{"location":"usage/getting-started/#home-screen","title":"Home screen","text":"<p>The Home screen gives any visitor on the OpenBAS platform an outlook on the live of the platform as well as an overview of your global security posture.</p>"},{"location":"usage/getting-started/#your-first-breach-and-attack-simulation","title":"Your first Breach and Attack Simulation","text":""},{"location":"usage/getting-started/#importing-players-and-assets-to-play-with","title":"Importing players and assets to play with","text":"<p>First, you need to import Players and Assets that will participate to the simulation and be targeted by technical or strategical events. To do so, you need to ...</p>"},{"location":"usage/getting-started/#integrate-with-simulation-agent-to-simulate-technical-events","title":"Integrate with Simulation Agent to simulate technical events","text":"<p>If you want to simulate attack at a technical level, you will need to install a Simulation Agent that will play technical events on your imported assets. To do so, you can go to the dedicated panel from the top right button and follow installation instructions. By default, Caldera is part of the OpenBAS stack.</p> <p></p> <p>The Caldera agent will allow you to play various technical events, based on the Mitre ATT&amp;CK matrix.</p>"},{"location":"usage/getting-started/#building-your-scenario","title":"Building your Scenario","text":"<p>Once integrations is done, you are ready to create your first Scenario! </p> <p>Scenarios act as template for your Breach and Attack simulations. After establihing such a template, you will be able to schedule it as a one shot simulation, or as a recurring one. </p> <ul> <li>First, go to the Scenarios menu and create a new one with the + button.</li> <li>Once done, define Teams that will be playing in this Scenario by going to the Definition/Teams tab</li> <li>Now go to the Injects tab and add some to build the serie of events that will define the core of your Scenario. If you want to stay strategical, you can select inject like \"Send individual mails\". If you want to go technical, you can select injects linked to attack pattern (Caldera integration allows you to play hundreds of them).</li> <li>Then, define who or what will be targeted by those injects, customize them, and define what is expected to happen. For example, you expect the targeted team to perform a specific action and the animation team will validated this expectation manually. Or, you expect the technical event to be prevented and it will be automatically checked through your integrations with your security systems.</li> <li>Do not forget to define when the inject is played in the scenario chronology.</li> </ul> <p>Optionnaly, you can buff up your scenario by adding Documents, Media pressures, or even CTF Challenges to your injects.</p>"},{"location":"usage/getting-started/#play-the-simulation","title":"Play the simulation","text":"<p>You can now schedule your Simulation by hitting the blue \"Simulate now\" button. Choose your moment and hit start.</p> <p>On time, a Simulation based on your Scenario template is generated. it is listed in your Scenario overview and in the Simulations menu. Fron there, you can follow the course of the Simulation and interact with it, for example to validate manual expectations.</p> <p>During the course of the simulation, results are updated and can be consulted in the Simulation overview.</p>"},{"location":"usage/getting-started/#evaluate-your-security-posture","title":"Evaluate your security posture","text":"<p>Results in OpenBAS are based on expectations' results that are linked to injects played during Simulations. It is then important to manually validate expectations that need it.</p> <p>Results are broken down by \"Prevention\", \"Detection\" and \"Human response\" metrics. - Prevention displays your ability to prevent the scenario's technical events to be completed - Detection displays your ability to detect the scenario's technical events - HUman response displays how well players and teams react as expected facing the scenario's events.</p>"},{"location":"usage/inject-caldera/","title":"Caldera injects","text":"<p>The Caldera framework, developed by MITRE, is a powerful framework designed to simulate cyberattacks. It enables security teams to conduct realistic and controlled simulations of adversary behavior, reducing the amount of time and resources needed for routine cybersecurity testing.</p>"},{"location":"usage/inject-caldera/#injects","title":"Injects","text":"<p>In OpenBAS, the Caldera framework has been fully integrated, offering users access to a comprehensive library of injects for conducting simulation exercises. With this integration, users can leverage the extensive capabilities of Caldera within OpenBAS.</p> <p>Caldera offers 1600+ abilities, covering the full range of ATT&amp;CK tactics and techniques. These capabilities equip security teams with an extensive toolkit to simulate various threats and assess defense mechanisms effectively.</p>"},{"location":"usage/inject-caldera/#behavior","title":"Behavior","text":"<p>Injects within the Caldera framework can be played on both individual Endpoints and Asset groups. Prior to playing injects, Caldera agents need to be installed on the target machines to enable interaction with the platform.</p> <p>Once the agents are deployed, simulations with Caldera injects can be executed. The platform will contact the agent to start the ability. Subsequently, the agents will report the results to OpenBAS. Below is the workflow illustrating the behavior of injects.</p> <p></p>"},{"location":"usage/inject-caldera/#configuration-variables","title":"Configuration variables","text":"<p>Below are the properties you'll need to set for OpenBAS:</p> Property application.properties Docker environment variable Mandatory Description Enable Caldera collector injector.caldera.enable <code>INJECTOR_CALDERA_ENABLE</code> Yes Enable the Caldera injector. Injector ID injector.caldera.id <code>INJECTOR_CALDERA_ID</code> Yes The ID of the injector. Collector IDs injector.caldera.collector-ids <code>INJECTOR_CALDERA_COLLECTOR_IDS</code> Yes The collector IDs compatible with the injection process. Caldera URL injector.caldera.url <code>INJECTOR_CALDERA_URL</code> Yes The URL of the Caldera instance. Caldera API Key injector.caldera.api-key <code>INJECTOR_CALDERA_API-KEY</code> Yes The API Key for the rest API of the Caldera instance."},{"location":"usage/injectors/","title":"Injectors","text":"<p>Injectors serve as the backbone of the platform, enabling essential integration and functionalities for conducting simulations and exercises effectively. These components empower administrators to orchestrate a diverse range of activities and responses during simulation scenarios. Some of them are built-in in the platform, and others are external integrations. </p> <p>Built-in injectors are seamlessly integrated into the platform, while external injectors require the deployment of additional systems alongside the platform to enable their functionality. Together, these injectors provide a comprehensive toolkit for administrators to design and execute simulations tailored to their specific objectives and requirements.</p>"},{"location":"usage/injectors/#injectors-list","title":"Injectors list","text":"<p>A multitude of injectors are available, each offering distinct capabilities and functionalities to enhance the simulation experience. Here is an overview of the existing injectors:</p> <ul> <li>Airbus CyberRange (Lade): Integration with the Airbus CyberRange platform, enabling seamless interaction and collaboration with CyberRange environments. For more information concerning CyberRange, please refer to the Airbus website.</li> <li>Caldera: Facilitates the use of the MITRE Caldera framework, empowering administrators to leverage advanced simulation capabilities. For more information concerning the Caldera injector, please refer to the dedicated documentation page.</li> <li>Challenges: Manages inject \"publish challenges\". To find more information more about this type of inject, please refer to the dedicated documentation section.</li> <li>Email: Manages the sending of injects' emails, enabling communication and dissemination of simulation-related information.</li> <li>HTTP query: Executes HTTP requests on external services, facilitating interactions with external systems. To find more information about the related inject, please refer to the dedicated documentation section.</li> <li>Manual: Platform functionality for creating manual action reminders, allowing administrators to prompt specific actions to be performed manually. To find more information about the related inject, please refer to the dedicated documentation section.</li> <li>Media pressure: Manages inject \"publish channel pressure\". To find more information about this type of inject, please refer to the dedicated documentation section.</li> <li>OVHCloud SMS Platform: Facilitates SMS messaging for injects, providing an additional communication channel for simulation participants.</li> <li>OpenCTI: Integration with an OpenCTI platform, enhancing simulation capabilities with access to threat intelligence and automatic scenario generation based on observed threat activities.</li> </ul> <p></p> <p></p>"},{"location":"usage/injectors/#agents","title":"Agents","text":"<p>For certain injectors, deploying an agent on the target machine is necessary to facilitate integration with OpenBAS. These agents are software programs that connect back to OpenBAS at certain intervals to get instructions.</p> <p>To access the agents and installation instructions, navigate to the dedicated page located in the top right-hand corner (button with the screen logo). </p> <p>Detailed guidance on installing the agents, along with downloadable packages, is provided on this page. Agents are available for various operating systems, including Windows, Linux, and MacOS, ensuring compatibility across different environments. </p> <p>As of now, only the Caldera injector requires the installation of an agent. This agent enables full integration with the MITRE Caldera framework, unlocking advanced simulation capabilities and enhancing the overall effectiveness of simulation exercises. Full details of the Caldera agent are available in the MITRE documentation.</p> <p></p>"},{"location":"usage/injects/","title":"Injects","text":"<p>Injects are fundamental elements of simulations within OpenBAS, each representing a discrete action to be executed during a Scenario. Managed and facilitated by various injectors, each inject type serves a distinct purpose, contributing to the comprehensive evaluation of defenses.</p> <p></p>"},{"location":"usage/injects/#create-an-inject","title":"Create an inject","text":"<p>Whether intended for Atomic testing or for a Simulation, the process for creating injects remains consistent within OpenBAS.</p> <p></p>"},{"location":"usage/injects/#for-atomic-testing","title":"For Atomic testing","text":"<p>To create an inject for atomic testing, navigate to the \"Atomic testing\" section located in the left-hand banner. Click on the \"+\" icon at the bottom right corner to initiate the inject creation process.</p>"},{"location":"usage/injects/#for-scenarios-and-simulations","title":"For Scenarios and Simulations","text":"<p>For injects intended for use within simulations, access the desired Scenario or Simulation and navigate to the \"Injects\" tab. Click on the \"+\" icon at the bottom right corner of the screen to open the inject creation panel.</p> <p>Note that an inject defined in a Scenario will be used in all the Scenario's subsequent Simulations. An Inject defined at the Simulation level will not be replicated into the Scenario itself, thus it will not be replicated in future Scenario's Simulations.</p>"},{"location":"usage/injects/#inject-creation-process","title":"Inject creation process","text":"<p>Once the inject creation panel is open, you can proceed to configure the inject according to your requirements. Key steps in the creation process include:</p> <ol> <li>Choose the type of inject : you first need to select an Inject in the list of available ones (from configured Injectors). To facilitate the selection into this possibly very long list, you can search injects by name or filter the list by Mitre Att&amp;ck patterns. </li> <li> <p>Set inject parameters:</p> <ul> <li>Descriptive information: Fill in details such as the title, description, and relevant tags to categorize the inject effectively. </li> <li>Inject targets: Specify the targets for the inject, which may include players and teams or assets and assets groups depending on the inject chosen. </li> <li>Expectations: Define the expected outcomes or responses to the inject, outlining the desired actions or behaviors by players. </li> <li>Attachments: Attach any relevant documents or resources to provide additional context or information related to the inject. </li> <li>Execution timing: If you are creating your Inject in the context of a Scenario or Simulation, you have to set the timing for when the inject should be executed within the simulation timeline, ensuring it aligns with the overall scenario progression. </li> <li>Additional fields: Depending on the type of Inject selected, you may have access to additional fields specific to that inject type. These fields may include the subject and body of an email, channel pressure settings for public communications, obfuscation options, and more.</li> </ul> </li> </ol> <p></p> <p>By following these steps and providing the necessary information, you can create injects tailored to your specific testing or simulation objectives.</p>"},{"location":"usage/injects/#inject-types","title":"Inject types","text":"<p>There are different types of injector in OpenBAS.</p>"},{"location":"usage/injects/#manual-action-reminders","title":"Manual action reminders","text":"<p>Manual action reminders are injects designed to prompt animation team to perform specific actions manually. It allows to place in the timeline a stimulus to be produced manually, outside the platform (e.g. simulated a call from a journalist on the switchboard telephone). These reminders ensure that critical tasks are completed as part of the simulation, enhancing the accuracy and realism of the exercise.</p> <p>The inject associated with this type is referred to as <code>Manual</code>.</p>"},{"location":"usage/injects/#direct-contact","title":"Direct contact","text":"<p>Injects for direct contact allow sending emails or SMS messages to players. These injects assess the organization's response to communication-based threats, such as phishing attempts, social engineering attacks, or emergency notifications. They can also assess crisis management, including responses to internal information requests or management pressure.</p> <p>Here's the list of injects linked to this category:</p> <ul> <li><code>Send a SMS</code>: enables sending SMS messages.</li> <li><code>Send individual mails</code>: enables sending emails to individuals separately.</li> <li><code>Send multi-recipients mail</code>: enables sending emails to a group of people (each recipient can see the other recipients).</li> </ul>"},{"location":"usage/injects/#media-pressure","title":"Media pressure","text":"<p>Injects simulating public communications involve the publication of articles, social media posts, or other fake announcements. These injects replicate scenarios where public disclosure of information or events affects an organization's reputation or operational continuity.</p> <p>The inject associated with this type is referred to as <code>Publish channel pressure</code>.</p>"},{"location":"usage/injects/#challenges","title":"Challenges","text":"<p>Challenge injects are set to test participants' skills and response capabilities by publishing challenges. These injects present scenarios or tasks that require active participation and problem-solving, allowing administrators to evaluate players.</p> <p>The inject associated with this type is referred to as <code>Publish challenges</code>.</p>"},{"location":"usage/injects/#http-requests","title":"HTTP requests","text":"<p>HTTP request injects are used to forge HTTP requests to a third party services in order to perform actions outside the platform (e.g. API call to an EDR). These injects enable the platform to communicate with external services, gather information, or trigger specific actions via HTTP protocols.</p> <p>HTTP requests GET, POST, and PUT, can be sent. The corresponding injects are named <code>HTTP Request - \\&lt;request type&gt;</code>.</p>"},{"location":"usage/injects/#integrations-with-agents-and-cyberranges","title":"Integrations with Agents and cyberranges","text":"<p>Injects executed on remote systems are facilitated by Injectors like Caldera or Airbus CyberRange. These actions simulate real-world attack techniques, allowing administrators to gauge the effectiveness of their security posture in response to various technical actions attackers may take.</p> <p>There are over 1,700 such injects covering all the TTPs in the MITRE Att&amp;ck matrix.</p>"},{"location":"usage/injects_and_expectations/","title":"Injects and Expectations","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p> <p>Evaluating security posture in OpenBAS is to confront events (Injects) with Expectations.</p>"},{"location":"usage/injects_and_expectations/#injects","title":"Injects","text":"<p>Threats are the results of actions by threat actors, and a combination of Intent, Capability and Opportunity. Simulating threats and their attack capability in OpenBAS is done by playing Injects against Players and Assets.</p> <p>Injects can be technical, to simulate action an attacker can perform on an endpoint for example, but also non-technical to represent action against Player or impactful contextual events during a crisis (a call from a media after a data leak)</p> <p></p> <p></p>"},{"location":"usage/injects_and_expectations/#expectations","title":"Expectations","text":"<p>Each Inject is associated with Expectations. Expectations represent what is expected from a security systems and teams against the attacker action or contextual events. </p> <p>Expectations can be about: - Prevention: facing this event, I expect my security posture to be able to prevent the attacker action - Detection: facing this event, I expect my security posture to be able to detect the attacker action - Human response: facing this event, I expect my teams to be able to react accordingly to my defined security process.</p> <p>The collectation and concatenation of expectations' results, broken down per type, allows to assess the security posture against a threat context, and offer the ability to pin point areas of improvement.</p>"},{"location":"usage/injects_builtin/","title":"Injects built-in","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p>"},{"location":"usage/media_pressure/","title":"Media pressure","text":"<p>Under construction</p> <p>We are doing our best to complete this page.  If you want to participae, dont hesitate to join the Filigran Community on Slack  or submit your pull request on the Github doc repository.</p> <p>Media pressure are Articles or web contents you create to give more shape to your Scenario, or to simulate contextual pressure on your Teams and Players.</p> <p>For example, you can create an Article about the data leakage your organization is said to be affected by during the Scenario, and simulate its publishing by a large coverage media outlet with a \"Publish channel pressure\" inject.</p>"},{"location":"usage/media_pressure/#create-an-article","title":"Create an Article","text":"<p>To create an Article, go to the definition page of your Scenario or your Simulation and click on the + button near \"media pressure\". If you did not create Article yet, you can also click on the more visible \"Create an Article\" button.</p> <p>An media pressure Article is defined by: - Channel: the Channel template that will shape the article during the display to the Players. A Channel must have been defined in the platform. - Title - Author - Content: the content of your article. You can enrich the text and have a preview of the formatted result. You can also go fullscreen. - To simulate social network engagement, you can define number of comments, Shares and Likes of the Articles. - Documents: you can attach file to the Article. It can be useful if you want to simulate the publication of a large report you don't want to craft inside OpenBAS, like a pdf security report for example.</p> <p>Once created, Articles appears as cards in the definition screen of the Scenario or Simulation they have been created into. Note that if an article is not yet used in the Scenario or Simulation (probably because it does not have been used in a \"Publish channel pressure\" inject), it is mentioned into the Article's card.</p>"},{"location":"usage/media_pressure/#use-an-article-in-scenario-and-simulation","title":"Use an Article in Scenario and Simulation","text":"<p>To use an Article in a Scenario or Simulation, it must have been created in the context of the Scenario, the Simulation's parent Scenario or the Simulation itself.</p> <p>When you select an Inject, if it is compatible with media pressures, you can add a media pressure article to it.</p>"},{"location":"usage/mitigations/","title":"Mitigations","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p>"},{"location":"usage/opencti_scenario/","title":"Scenario generation from OpenCTI","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p> <p>Creating a Scenario is not an easy task. To help you build meaningfull ones, directly related to threats meaningfull to you, you can leverage an OpenCTI platform integration.</p> <p>When a Scenario is generated from OpenCTI, a Scenario is automatically created and can be consulted in the Scenarios screen. The name of the Scenario includes an OpencTI mention. The Scenario will automatically contains relevant injects sequences in accordance with the threat context from OpenCTI.</p> <p>You will need to review it and may be customize it to ensure the Scenario fits your requirement, and also to select Targets for the Scenario's injects.</p> <p>Once you are ready, schedule you Simulation(s), as for other Scenarios. Global results will also be available directly into OpenCTI, in the Overview of the threat context the Scenario is based on!</p>"},{"location":"usage/overview/","title":"Overview","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p>"},{"location":"usage/payloads/","title":"Payloads","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p>"},{"location":"usage/personas/","title":"Personas","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p>"},{"location":"usage/playing/","title":"Playing","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p>"},{"location":"usage/reports/","title":"Reports","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p>"},{"location":"usage/scenario/","title":"Scenario","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p> <p>When clicking on Scenarios in the left menu, you access to the list of all Scenarios that have been defined in the platform. Scenario are like templates that translate threat context into meaningfull events to simulate.</p> <p>Scenarios can be categorized by defining categories, main focus, severity and tags. It is then possible to filter the Scenarios list based on this attributes. Quick filters are present by default on top of the screen to filter Scenario on most used Categories.</p> <p>It is also possible to search Scenarios by their names using the contextual search bar.</p>"},{"location":"usage/scenario/#create-a-scenario","title":"Create a Scenario","text":"<p>To create a Scenario, hit the + button on the bottom right of the screen and define general metadata that make sense for you. </p> <p>Once done, the Scenario is accessible in the list. Click on it to see its details and define them.</p>"},{"location":"usage/scenario/#scenario-overview","title":"Scenario Overview","text":"<p>The Overview regroups everything you need to know to evaluate you security posture facing this threat context over time. The context of the Scenario is displayed, with all the Results of the simulations that have been played from this Scenarios. The list of these Simulations is also displayed to easily switch to their specific details and results.</p> <p>If the Scenario has never been simulated, note that the Results' widgets contain an example of how results will be displayed and the list of Simulations is replaced with a invite to generate one.</p>"},{"location":"usage/scenario/#defining-a-scenario","title":"Defining a Scenario","text":"<p>Of course, simulating an empty Scenario is useless. To define the Scenario, use the \"Definition\" and \"Injects\" screens.</p> <p>In Definition, you can add all elements that will help you to construct events: - Teams and Players involved in the Scenario - Custom Variables you may need to simplify Injects' customization - Articles you may used in the Scenario to simulate media pressure - Challenges you may have designed if you including Capture The Flag elements in your Scenario</p> <p>Once you have added all the elements you may need, you can go to the Injects screen to begin to create the chain of events that will shape your Scenario.</p> <p>By clicking on the + button at the bottom right of the screen, you enter the inject creation workflow.</p> <p>On the left of the creation screen is the list of all available Inject you can add to your Scenario. Logos on the left of each line indicates which Injector is associated with each inject.</p> <p>Depending on your integrations, this list can be long. You can filter the list by compatible platforms or by Mitre Att&amp;ck tactics. By clicking on the \"Att&amp;CK\" logo near the search bar, you can also filter by selecting a precise Mitre Att&amp;ck techniques.</p> <p>When selecting an inject on the left, the form on the right populates itself with a by-default title and propose you to define when the inject should be played in the Scenario's chronology.</p> <p>By clicking on Inject content, you can define now or later the targeted assets and players, needed configurations, and the assorted expectations.</p> <p>The \"available variables\" button helps you to use already defined variables into compatible fields.</p>"},{"location":"usage/scenario/#launching-a-simulation-of-the-scenario","title":"Launching a Simulation of the Scenario","text":"<p>When you have finished to define your Scenario, it is time to simulate it and evaluate your security posture!</p> <p>To do so, hit the Simulate now button. You can decide to simulate this Scenario as a one-time evaluation, as the date and time you see fit. And you can also simulate it recurringly to evaluate your posture over time. You will see Results of each Simulation populate your Scenario overview.</p> <p>A visual indication, at the right of the Scenario's title, helps you quicly know if the Scenario is being simulated or not.</p>"},{"location":"usage/scenario/#export-your-scenario","title":"Export your Scenario","text":"<p>You have the capability to export your carefully crafted Scenario as a JSON file by hitting the three-dots button on the top right of the Scenario screen. it can help to share it with others, or to store it outside the platform.</p>"},{"location":"usage/scenarios_and_simulations/","title":"Scenarios and Simulations","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p> <p>In OpenBAS, the core concept to simulate attacks is based on the duo Scenario &amp; Simulation.</p>"},{"location":"usage/scenarios_and_simulations/#scenarios","title":"Scenarios","text":"<p>Scenario allows to translate a threat context, like an attack or even a threat actor, into a meaningful chronology of events (called injects), technical or not. This chronology of events can be detailed with associated documents or media articles to also simulate the environment around these events.</p> <p>In Scenarios, you also define who is playing, either actual people (called Players) or endpoints (called Assets). They will be targets of the events representing the threat.</p> <p>In order to translate real threat into Scenario, it is possible to create them from OpenCTI data, like Reports.</p>"},{"location":"usage/scenarios_and_simulations/#simulations","title":"Simulations","text":"<p>If a Scenario represents threat context translated into meaningful events, a Simulation is the mean to evaluate your security posture against this threat context. </p> <p>Simulating a Scenario with reccurence allows you to evaluate your security posture over time against a threat context, and because Simulations are always related to their parent Scenario, even if it evolved, you will be able to: - evaluate your risk facing evolving threats. - evaluate the impact of your security governance against your most relevant threats.</p>"},{"location":"usage/simulation/","title":"Simulation","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p> <p>When clicking on Simulations in the left menu, you access to the list of all Simulations ever launched in the platform. You can filter by tag (for example to only display simulation related to a specific threat actor) and sort them (chronologically, by status, etc.).</p> <p>From this screen, you can easily see last global scores and access ongoing Simulations at platform level.</p>"},{"location":"usage/simulation/#creating-a-simulation","title":"Creating a Simulation","text":"<p>The best practice to create a Simulation is to do it from a Scenario in order to evaluate your security posture over time against a specific threat context.</p> <p>But you can create directly a Simulation if you want, by hitting the + button on the bottom right of the screen. You will have similar definition options as in Scenario creation.</p>"},{"location":"usage/simulation/#simulation-overview","title":"Simulation overview","text":"<p>The Overview regroups everything you need to know to follow your Simulation by its Results. Results are broken down into 3 main metrics:</p> <ul> <li>Prevention: the ability of your security posture to prevent the simulated scenario's events to happen</li> <li>Detection: the ability of your security posture to detect the simulated scenario's events</li> <li>Human response: the ability of your security teams to react as intended facing the simulated scenario</li> </ul> <p>The top of the Simulation screen give you the ability to Start, stop and Reset the Simulation, delay the launch time.</p>"},{"location":"usage/simulation/#overriding-the-scenario-definition","title":"Overriding the Scenario definition","text":"<p>In a Simulation, you can see and modify all elements defining it: Teams and Players, Variables, Media pressure, Challenges, Injects. Modifying the Simulation definition allows you to customize it to adapt a singular play to some temporary changes. For example, change an email address into Variables to be used in email-related injects, change a playing team, etc.</p>"},{"location":"usage/simulation/#animating-a-simulation","title":"Animating a Simulation","text":"<p>The Animation screen of a Simulation is the place to follow the Simulation execution, especially if you are conducting simulation at strategical level (heavily relying on interactions with Teams and Players, manual validations of expectations) for training your organization on all aspects of a cyber crisis.</p> <p>The Timeline screen is the overview of the Animation tab, to see ongoing injects.</p> <p>The Mails screen is a way to manage email interaction with Players into the OpenBAS platform.</p> <p>The Validation screen is the place to manually validate expectations of the Simulation to consolidate Results.</p> <p>The Simulation logs is an interface for the animation team to collaborate during the Simulation.</p>"},{"location":"usage/simulation/#lessons-learned","title":"Lessons learned","text":"<p>In the Lesson Learned tab of a Simulation, you can manage the collection and concatenation of customizable surveys. It helps you in conducting the most underestimated part of a Breach and Attack simulation involving real people, by automating it and complete your Simulation's Results with qualitative feedback.</p>"},{"location":"usage/skills/","title":"Skills","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p>"},{"location":"usage/systems/","title":"Systems","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p>"},{"location":"usage/targets/","title":"Targets","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p> <p>When you are using an Inject, either for Atomic testing, Scenario or Simulation, you need to define which Players, Teams, Assets (endpoints) or/and Asset groups it will be sent to. They are called \"targets\" of the Inject.</p> <p>Note that some Injects cannot target Assets and other cannot target Players. For example, it is not possible to target an Asset with the Inject \"Send individual mails\", only Players and Teams.</p> <p>Selecting Targets for an Inject is done when creating or updating an Inject. </p>"},{"location":"usage/targets/#selecting-players-and-teams","title":"Selecting Players and Teams","text":"<p>It is not yet possible to target directly a Player. You must target a Team. If you are into a Scenario or a Simulation, the Team must be part of the Scenario or Simulation to be selectable. If you are creating an Atomic testing, all Teams in the platform are selectable.</p> <p>Note that visibility of Teams and Players is limited by the Organization's segregation.</p> <p>When selecting a Team to be targeted, all Players of the Team will be targeted by the inject. Each one will have to complete assorted expectations.</p>"},{"location":"usage/targets/#selecting-assets-endpoints-and-asset-groups","title":"Selecting Assets (endpoints) and Asset Groups","text":"<p>You can target Assets (endpoints) directly or Asset groups. In the dedicated dialog, only Assets compatible with the Inject are listed by default. </p> <p>When selecting an Asset group to be targeted, all Assets (endpoints) of the group will be targeted by the Inject. Each one will have to complete assorted expectations.</p>"},{"location":"usage/teams_and_players_and_organizations/","title":"Players, Teams and Organizations","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p> <p>Breach and Attack simulation is about testing your security posture, and People are an essential part of it!</p> <p>Players, Teams and Organizations are where you organize  into OpenBAS all the human part of your security posture. Ones you will target with injects during your Simulations and Atomic testings.</p>"},{"location":"usage/teams_and_players_and_organizations/#players","title":"Players","text":"<p>Players are the users that may take part into your Scenarios, to be tested against attack or contextual events (Injects).</p> <p>Players can be created manually with the + button at the bottom right, but we encourage you to active an integration allowing to import them from your IT environment, like with Microsoft Entra integration.</p> <p>Players are defined by:</p> <ul> <li>Email address</li> <li>First name</li> <li>Last name</li> <li>Organization: you can link a Player to an Organization (see below)</li> <li>Country</li> <li>Phone number</li> <li>PGP Public key: necessary if you want to play encrypted email injects</li> <li>Tags: if you want to sort them by custom categories</li> </ul> <p>This list of Players can be exported by clicking on the export button, at the top right of the players screen.</p>"},{"location":"usage/teams_and_players_and_organizations/#teams","title":"Teams","text":"<p>Teams regroup Players into groups that can be targeted by injects during Simulations or Atomic testing. It is the best way to represent your different security team (like CSIRT, SOC, VOC, etc.) and other teams that might be involved into your Scenario (legal department, communication department, etc.)</p> <p>Teams are defined by:</p> <ul> <li>Name</li> <li>Description</li> <li>Organization: you can link a Team to an Organization (see below)</li> <li>Tags: if you want to sort them by custom categories</li> </ul> <p>From the Teams list, you can manage Players of a Team by clicking on the three-dots inline button on the right and select \"Manage Players\". From there, you can see all Players of the Teams and their communication channels' state. You can update, remove or delete them.</p>"},{"location":"usage/teams_and_players_and_organizations/#organizations","title":"Organizations","text":"<p>Organization is a simple way to segregate Players and Teams in the platform. A Player associated with an Organization, even with the necessary rights to animate and planned Scenarios and Simulations, will never see Players and Teams from other Organizations.</p> <p>It can be very handful if you are using the OpenBAS platform for planning and playing Simulations for different companies or subsidiaries.</p>"},{"location":"usage/testing/","title":"Testing","text":"<p>Under construction</p> <p>We are doing our best to complete this page. If you want to participate, don't hesitate to join the Filigran Community on Slack or submit your pull request on the Github doc repository.</p>"},{"location":"usage/variables/","title":"Variables","text":""},{"location":"usage/variables/#built-in-variables","title":"Built-In Variables","text":"<p>Within certain injects, users can leverage a set of predefined built-in variables to dynamically customize content. These variables are designed to streamline the process of personalizing messages. Examples of built-in variables include but not limited to :</p> <ul> <li>${user.email}: Represents the email of the target user</li> <li>${exercise.name}: Represents the name of the current exercise</li> <li>${player_uri}: Represents the player interface platform link</li> </ul>"},{"location":"usage/variables/#custom-variables","title":"Custom Variables","text":"<p>In addition to the built-in variables, users can define their own variables within an exercise.</p> <p>To define custom variables :</p> <ol> <li>Select an exercise</li> <li>Navigate to the Definition tab</li> <li>Navigate to the Variables section</li> </ol> <p>In this section, users can create, update or delete custom variables. </p>"},{"location":"usage/variables/#limitation","title":"Limitation","text":"<p>To create custom variables, consider the following limitation:</p> <ul> <li>Only lowercase characters and <code>_</code> are authorized for the key value</li> <li>Variable value can only be string</li> </ul>"},{"location":"usage/variables/#use-variables","title":"Use Variables","text":"<p>These variables can be used to enhance personalization of certain stimuli within an exercise. Here is a non-exhaustive list of concerned stimuli : - Email sending - Sms sending</p> <p></p>"}]}