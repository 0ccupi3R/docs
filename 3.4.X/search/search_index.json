{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"],"fields":{"title":{"boost":1000.0},"text":{"boost":1.0},"tags":{"boost":1000000.0}}},"docs":[{"location":"","title":"OpenEx Documentation Space","text":"<p>Welcome to the OpenEx Documentation space. Here you will be able to find all documents, meeting notes and presentations about the platform.</p> <p>Release notes</p> <p>Please, be sure to also take a look at the OpenEx releases notes, they may contain important information about releases and deployments.</p>"},{"location":"#introduction","title":"Introduction","text":"<p>OpenEx is an open source platform allowing organizations to plan, schedule and conduct crisis exercises as well as adversary and breach simulations. OpenEx is an ISO 22398 compliant product and has been designed as a modern web application including a RESTFul API and an UX oriented frontend.</p>"},{"location":"#getting-started","title":"Getting started","text":"<ul> <li> <p> Deployment &amp; Setup</p> <p>Learn how to deploy and configure the platform as well as launch connectors to get the first data in OpenEx.</p> <p> Deploy now</p> </li> <li> <p> User Guide</p> <p>Understand how to use the platform, create exercises and campaigns, use  media pressure simulation and integrate with other tools. </p> <p> Explore</p> </li> <li> <p> Administration</p> <p>Know how to administrate OpenEx, create users and groups using RBAC / segregation, customize the overall experience.</p> <p> Customize</p> </li> </ul> <p>Need more help?</p> <p>We are doing our best to keep this documentation complete, accurate and up to date. </p> <p>If you still have questions or you find something which is not sufficiently explained, join the Filigran Community on Slack.</p>"},{"location":"#latest-blog-posts","title":"Latest blog posts","text":"<p>All tutorials are published directly on the Medium blog, this section provides a comprehensive list of the most important ones.</p> <ul> <li> <p>How we are disrupting tactical and strategical crisis management exercises with OpenEx 3 <sub><sup>Oct 10, 2022</sup></sub></p> <p>It\u2019s been a while since we\u2019ve talked about OpenEx and yet\u2026 In the trying times we live in, both in cyberspace and in real life, crisis preparedness has become...</p> <p> Read</p> </li> <li> <p>Plan, execute and conduct your crisis management exercises <sub><sup>Jan 25, 2021</sup></sub></p> <p>More than 3 years ago, we decided to build the OpenEx application which allows organizations to facilitate the planning of crisis management...</p> <p> Read</p> </li> </ul>"},{"location":"#additional-resources","title":"Additional resources","text":"<p>Below, you will find external resources which may be useful along your OpenEx journey.</p> <p> Training Courses Training courses for analysts and administrators in the Filigran training center.</p> <p></p>"},{"location":"administration/enterprise/","title":"Enterprise Edition","text":"<p>Under construction</p> <p>We are doing our best to complete this page.  If you want to participae, dont hesitate to join the Filigran Community on Slack  or submit your pull request on the Github doc repository.</p>"},{"location":"administration/introduction/","title":"Introduction","text":"<p>Under construction</p> <p>We are doing our best to complete this page.  If you want to participae, dont hesitate to join the Filigran Community on Slack  or submit your pull request on the Github doc repository.</p>"},{"location":"administration/parameters/","title":"Parameters","text":"<p>Under construction</p> <p>We are doing our best to complete this page.  If you want to participae, dont hesitate to join the Filigran Community on Slack  or submit your pull request on the Github doc repository.</p>"},{"location":"administration/policies/","title":"Policies","text":"<p>Under construction</p> <p>We are doing our best to complete this page.  If you want to participae, dont hesitate to join the Filigran Community on Slack  or submit your pull request on the Github doc repository.</p>"},{"location":"administration/users/","title":"Users and RBAC","text":"<p>Under construction</p> <p>We are doing our best to complete this page.  If you want to participae, dont hesitate to join the Filigran Community on Slack  or submit your pull request on the Github doc repository.</p>"},{"location":"deployment/authentication/","title":"Authentication","text":""},{"location":"deployment/authentication/#introduction","title":"Introduction","text":"<p>Welcome to the authentication documentation for OpenEx. This documentation provides details on setting up and utilizing the authentication system, which supports multiple authentication methods to cater to different user needs and security requirements.</p>"},{"location":"deployment/authentication/#supported-authentication-methods","title":"Supported Authentication Methods","text":""},{"location":"deployment/authentication/#username-password","title":"Username-Password","text":"<p>Simple local authentication.</p>"},{"location":"deployment/authentication/#oauth-openid-and-saml2","title":"OAuth (OpenID) and SAML2","text":"<p>OAuth (OpenID) authentication and SAML2 enable secure and streamlined Single Sign-On (SSO) by allowing users to authenticate using external identity providers or their organization's identity providers.</p>"},{"location":"deployment/authentication/#getting-started","title":"Getting Started","text":"<p>Before you can start using any authentication method, follow these steps to set up the authentication system.</p>"},{"location":"deployment/authentication/#environment-variables","title":"Environment Variables","text":"<p>The authentication system relies on environment variables to function correctly.</p>"},{"location":"deployment/authentication/#usernamepassword-environment-variables","title":"Username/Password Environment Variables","text":"<ul> <li><code>OPENEX.AUTH-LOCAL-ENABLE</code>: Set this to <code>true</code> to enable username/password authentication.</li> </ul>"},{"location":"deployment/authentication/#oauth-openid-environment-variables","title":"OAuth (OpenID) Environment Variables","text":"<ul> <li><code>OPENEX.AUTH-OPENID-ENABLE</code>: Set this to <code>true</code> to enable OAuth (OpenID) authentication.</li> <li>Example for Auth0 :</li> </ul> <pre><code>SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_{registrationId}_ISSUER-URI=https://auth.auth0.io/\nSPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_{registrationId}_CLIENT-NAME=Login with auth0\nSPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_{registrationId}_CLIENT-ID=\nSPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_{registrationId}_CLIENT-SECRET=\nSPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_{registrationId}_REDIRECT-URI=${openex.base-url}/login/oauth2/code/{registrationId}\nSPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_{registrationId}_SCOPE=openid,profile,email\n</code></pre> <ul> <li>Example for Github (or others pre handled oauth2 providers) :</li> </ul> <pre><code>SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_{registrationId}_CLIENT_NAME=Login with Github\nSPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_{registrationId}_CLIENT_ID=\nSPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_{registrationId}_CLIENT_SECRET=\n</code></pre> <p>Tips</p> <p>{registrationId} is an arbitrary identifier you choose.</p>"},{"location":"deployment/authentication/#saml2-environment-variables","title":"SAML2 Environment Variables","text":"<ul> <li><code>OPENEX.AUTH-SAML2-ENABLE</code>: Set this to <code>true</code> to enable SAML2 authentication.</li> <li>Example for Microsoft :</li> </ul> <pre><code>SPRING_SECURITY_SAML2_RELYINGPARTY_REGISTRATION_{registrationId}_ENTITY-ID=\nSPRING_SECURITY_SAML2_RELYINGPARTY_REGISTRATION_{registrationId}_ASSERTINGPARTY_METADATA-URI=\nOPENEX_PROVIDER_{registrationId}_FIRSTNAME_ATTRIBUTE_KEY=\nOPENEX_PROVIDER_{registrationId}_LASTNAME_ATTRIBUTE_KEY=\n</code></pre> <p>Tips</p> <p>{registrationId} is an arbitrary identifier you choose.   metadata-uri is the uri of the xml file given by your identity provider</p>"},{"location":"deployment/authentication/#single-sign-on-url","title":"Single Sign On URL","text":""},{"location":"deployment/authentication/#saml2","title":"SAML2","text":"<p>Url for the config of your sso provider <pre><code>${openex.base-url}/login/saml2/sso/{registrationId}\n</code></pre></p>"},{"location":"deployment/authentication/#administrative-access","title":"Administrative Access","text":"<p>To grant administrative roles, you can utilize OAuth and SAML2 integration. If you opt for this approach, you'll need to include the following variables:</p> <pre><code>OPENEX_PROVIDER_{registrationId}_ROLES_PATH=\nOPENEX_PROVIDER_{registrationId}_ROLES_ADMIN=\n</code></pre> <p>However, if you intend to manage administrative roles within the OpenEx platform itself, there's no need to provide these variables.</p>"},{"location":"deployment/authentication/#error-handling","title":"Error Handling","text":"<p>Under construction</p> <p>We are doing our best to complete this page.  If you want to participae, dont hesitate to join the Filigran Community on Slack  or submit your pull request on the Github doc repository.</p>"},{"location":"deployment/clustering/","title":"Clustering","text":"<p>Under construction</p> <p>We are doing our best to complete this page.  If you want to participae, dont hesitate to join the Filigran Community on Slack  or submit your pull request on the Github doc repository.</p>"},{"location":"deployment/configuration/","title":"Configuration","text":"<p>The purpose of this section is to learn how to configure OpenEx to have it tailored for your production and development needs.</p> <p>OpenEx is a JAVA process and therefore can be configured manually using the configuration file <code>application.properties</code> or environment variables when using Docker.</p>"},{"location":"deployment/configuration/#platform","title":"Platform","text":""},{"location":"deployment/configuration/#basic-parameters","title":"Basic parameters","text":"Parameter Environment variable Default value Description server.address SERVER_ADDRESS 0.0.0.0 Listen address of the application server.port SERVER_PORT 8080 Listen port of the application openex.base-url OPENEX_BASE-URL http://localhost:8080 Base URL of the application, will be used in some email links server.servlet.session.timeout SERVER_SERVLET_SESSION_TIMEOUT 20m Default duration of session (20 minutes) openex.cookie-secure OPENEX_COOKIE-SECURE false Turn on if the access is done in HTTPS openex.admin.email OPENEX_ADMIN_EMAIL admin@openex.io Default login email of the admin user openex.admin.password OPENEX_ADMIN_PASSWORD ChangeMe Default password of the admin user openex.admin.token OPENEX_ADMIN_TOKEN ChangeMe Default token (must be a valid UUIDv4)"},{"location":"deployment/configuration/#network-and-security","title":"Network and security","text":"Parameter Environment variable Default value Description server.ssl.enabled SERVER_SSL_ENABLED false Turn on to enable SSL on the local server server.ssl.key-store-type SERVER_SSL_KEY-STORE-TYPE PKCS12 Type of SSL keystore server.ssl.key-store SERVER_SSL_KEY-STORE classpath:localhost.p12 SSL keystore path server.ssl.key-store-password SERVER_SSL_KEY-STORE-PASSWORD admin SSL keystore password server.ssl.key-alias SERVER_SSL_KEY-ALIAS localhost SSL key alias"},{"location":"deployment/configuration/#logging","title":"Logging","text":"Parameter Environment variable Default value Description logging.level.root LOGGING_LEVEL_ROOT fatal Root log level logging.level.io.openex LOGGING_LEVEL_IO_OPENEX warn OpenEx log level logging.file.name LOGGING_FILE_NAME ./logs/openex.log Log file path (in addition to console output)"},{"location":"deployment/configuration/#dependencies","title":"Dependencies","text":""},{"location":"deployment/configuration/#postgresql","title":"PostgreSQL","text":"Parameter Environment variable Default value Description spring.datasource.url SPRING_DATASOURCE_URL jdbc:postgresql://... URL of the database (ex jdbc:postgresql://postgresql.mydomain.com:5432/openex) spring.datasource.username SPRING_DATASOURCE_USERNAME openex Login for the database spring.datasource.password SPRING_DATASOURCE_PASSWORD password Password for the database"},{"location":"deployment/configuration/#s3-bucket-minio","title":"S3 bucket / MinIO","text":"Parameter Environment variable Default value Description minio.endpoint MINIO_ENDPOINT Hostname of the S3 instance minio.bucket MINIO_BUCKET openex Name of the S3 bucket minio.port MINIO_PORT 9000 Port of the S3 endpoint minio.access-key MINIO_ACCESS-KEY key S3 bucket access key (MinIO user) minio.access-secret MINIO_ACCESS-SECRET secret S3 bucket access secret (MinIO password)"},{"location":"deployment/configuration/#mailbox","title":"Mailbox","text":"<p>For the associated mailbox, for the moment the platform only relies on IMAP / SMTP protocols, we are actively developing integrations with APIs such as O365 and Google Apps.</p>"},{"location":"deployment/configuration/#imap","title":"IMAP","text":"Parameter Environment variable Default value Description openex.mail.imap.enabled OPENEX_MAIL_IMAP_ENABLED false Turn on to enable IMAP mail synchronization. Injector email must be well configured openex.mail.imap.host OPENEX_MAIL_IMAP_HOST imap.mail.com IMAP Server hostname openex.mail.imap.port OPENEX_MAIL_IMAP_PORT 993 IMAP Server port openex.mail.imap.username OPENEX_MAIL_IMAP_USERNAME username@mail.com IMAP Server username openex.mail.imap.password OPENEX_MAIL_IMAP_PASSWORD password IMAP Server password openex.mail.imap.inbox OPENEX_MAIL_IMAP_INBOX INBOX IMAP inbox directory to synchronize from openex.mail.imap.sent OPENEX_MAIL_IMAP_SENT Sent IMAP sent directory to synchronize from Parameter Environment variable Default value Description openex.mail.imap.ssl.enable OPENEX_MAIL_IMAP_SSL_ENABLE true Turn on IMAP SSL mode openex.mail.imap.ssl.trust OPENEX_MAIL_IMAP_SSL_TRUST * Trust unverified certificates openex.mail.imap.auth OPENEX_MAIL_IMAP_AUTH true Turn on IMAP authentication openex.mail.imap.starttls.enable OPENEX_MAIL_IMAP_STARTTLS_ENABLE true Turn on IMAP STARTTLS"},{"location":"deployment/configuration/#smtp","title":"SMTP","text":"Parameter Environment variable Default value Description spring.mail.host SPRING_MAIL_HOST smtp.mail.com SMTP Server hostname spring.mail.port SPRING_MAIL_PORT 587 SMTP Server port spring.mail.username SPRING_MAIL_USERNAME username@mail.com SMTP Server username spring.mail.password SPRING_MAIL_PASSWORD password SMTP Server password Parameter Environment variable Default value Description spring.mail.properties.mail.smtp.ssl.enable SPRING_MAIL_PROPERTIES_MAIL_SMTP_SSL_ENABLE true Turn on SMTP SSL mode spring.mail.properties.mail.smtp.ssl.trust SPRING_MAIL_PROPERTIES_MAIL_SMTP_SSL_TRUST * Trust unverified certificates spring.mail.properties.mail.smtp.auth SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH true Turn on SMTP authentication spring.mail.properties.mail.smtp.starttls.enable SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE true Turn on SMTP STARTTLS <p>Default file</p> <p>It is possible to check all default parameters implemented in the platform in the <code>application.properties</code> file.</p>"},{"location":"deployment/configuration/#injectors-integrations","title":"Injectors (integrations)","text":"<p>For specific injector configuration, you need to check each injector behavior.</p> <p>Injectors list</p> <p>If you are looking to the list of OpenEx injectors or native integration, please check the OpenEx Ecosystem.</p>"},{"location":"deployment/injectors/","title":"Injectors","text":"<p>Under construction</p> <p>We are doing our best to complete this page.  If you want to participae, dont hesitate to join the Filigran Community on Slack  or submit your pull request on the Github doc repository.</p>"},{"location":"deployment/installation/","title":"Installation","text":"<p>All components of OpenEx are shipped both as Docker images and manual installation packages.</p> <p>Production deployment</p> <p>For production deployment, we recommend to deploy all components in containers, including dependencies, using native cloud services or orchestration systems such as Kubernetes.</p> <ul> <li> <p> Use Docker</p> <p>Deploy OpenEx using Docker and the default <code>docker-compose.yml</code> provided in the docker.</p> <p> Setup</p> </li> <li> <p> Manual installation</p> <p>Deploy dependencies and launch the platform manually using the packages released in the GitHub releases.</p> <p> Explore</p> </li> </ul>"},{"location":"deployment/installation/#using-docker","title":"Using Docker","text":""},{"location":"deployment/installation/#introduction","title":"Introduction","text":"<p>OpenEx can be deployed using the docker-compose command.</p>"},{"location":"deployment/installation/#pre-requisites","title":"Pre-requisites","text":"<p> Linux</p> <pre><code>$ sudo apt install docker-compose\n</code></pre> <p> Windows and MacOS</p> <p>Just download the appropriate Docker for Desktop version for your operating system.</p>"},{"location":"deployment/installation/#clone-the-repository","title":"Clone the repository","text":"<p>Docker helpers are available in the Docker GitHub repository.</p> <pre><code>$ mkdir -p /path/to/your/app &amp;&amp; cd /path/to/your/app\n$ git clone https://github.com/OpenEx-Platform/docker.git\n$ cd docker\n</code></pre>"},{"location":"deployment/installation/#configure-the-environment","title":"Configure the environment","text":"<p>Before running the <code>docker-compose</code> command, the <code>docker-compose.yml</code> file should be configured. By default, the <code>docker-compose.yml</code> file is using environment variables available in the file <code>.env.sample</code>.</p> <p>You can either rename the file <code>.env.sample</code> in <code>.env</code> and put the expected values or just fill directly the <code>docker-compose.yml</code> with the values corresponding to your environment.</p> <p>Configuration static parameters</p> <p>The complete list of available static parameters is available in the configuration section.</p> <p>Whether you are using one method or the other, here are the mandatory parameters to fill:</p> <pre><code>POSTGRES_USER=ChangeMe\nPOSTGRES_PASSWORD=ChangeMe\nKEYSTORE_PASSWORD=ChangeMe\nMINIO_ROOT_USER=ChangeMeAccess\nMINIO_ROOT_PASSWORD=ChangeMeKey\nSPRING_MAIL_HOST=smtp.changeme.com\nSPRING_MAIL_PORT=25\nSPRING_MAIL_USERNAME=ChangeMe@domain.com\nSPRING_MAIL_PASSWORD=ChangeMe\nSPRING_MAIL_PROPERTIES_MAIL_SMTP_SSL_TRUST=*\nSPRING_MAIL_PROPERTIES_MAIL_SMTP_SSL_ENABLE=false\nSPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH=false\nSPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE=false\n# Should be remove if you have already an admin user and won't update it\nOPENEX_ADMIN_EMAIL=ChangeMe\nOPENEX_ADMIN_PASSWORD=ChangeMe\nOPENEX_ADMIN_TOKEN=ChangeMe\n</code></pre> <p>If your <code>docker-compose</code> deployment does not support <code>.env</code> files, just export all environment variables before launching the platform:</p> <pre><code>$ export $(cat .env | grep -v \"#\" | xargs)\n</code></pre>"},{"location":"deployment/installation/#memory-management-settings","title":"Memory management settings","text":""},{"location":"deployment/installation/#postgresql","title":"PostgreSQL","text":"<p>PostgreSQL is the main database of OpenEx. You can find more information in the official PostgresQL documentation.</p>"},{"location":"deployment/installation/#minio","title":"MinIO","text":"<p>MinIO is a small process and does not require a high amount of memory. More information are available for Linux here on the Kernel tuning guide.</p>"},{"location":"deployment/installation/#persist-data","title":"Persist data","text":"<p>The default for OpenEx data is to be persistent.</p> <p>In the <code>docker-compose.yml</code>, you will find at the end the list of necessary persitent volumes for the dependencies:</p> <pre><code>volumes:\npgsqldata:\ns3data:\n</code></pre>"},{"location":"deployment/installation/#run-openex","title":"Run OpenEx","text":""},{"location":"deployment/installation/#using-single-node-docker","title":"Using single node Docker","text":"<p>After changing your <code>.env</code> file run <code>docker-compose</code> in detached (-d) mode:</p> <pre><code>$ sudo systemctl start docker.service\n# Run docker-compose in detached \n$ docker-compose up -d\n</code></pre>"},{"location":"deployment/installation/#using-docker-swarm","title":"Using Docker swarm","text":"<p>In order to have the best experience with Docker, we recommend using the Docker stack feature. In this mode you will have the capacity to easily scale your deployment.</p> <pre><code># If your virtual machine is not a part of a Swarm cluster, please use:\n$ docker swarm init\n</code></pre> <p>Put your environment variables in <code>/etc/environment</code>:</p> <pre><code># If you already exported your variables to .env from above:\n$ sudo cat .env &gt;&gt; /etc/environment\n$ sudo bash -c 'cat .env &gt;&gt; /etc/environment\u2019\n$ sudo docker stack deploy --compose-file docker-compose.yml openex\n</code></pre> <p>Installation done</p> <p>You can now go to http://localhost:8080 and log in with the credentials:</p> <ul> <li>Login: admin@openex.io</li> <li>Password: admin</li> </ul>"},{"location":"deployment/installation/#manual-installation","title":"Manual installation","text":""},{"location":"deployment/installation/#prepare-the-installation","title":"Prepare the installation","text":""},{"location":"deployment/installation/#installation-of-dependencies","title":"Installation of dependencies","text":"<p>You have to install all the needed dependencies for the main application and the workers. The example below if for Ubuntu:</p> <pre><code>$ sudo apt install openjdk-18-jre </code></pre>"},{"location":"deployment/installation/#download-the-application-files","title":"Download the application files","text":"<p>First, you have to download and extract the latest release file.</p> <pre><code>$ mkdir /path/to/your/app &amp;&amp; cd /path/to/your/app\n$ wget &lt;https://github.com/OpenEx-Platform/openex/releases/download/{RELEASE_VERSION}/openex-release-{RELEASE_VERSION}.tar.gz&gt;\n$ tar xvfz openex-release-{RELEASE_VERSION}.tar.gz\n</code></pre>"},{"location":"deployment/installation/#install-the-main-platform","title":"Install the main platform","text":""},{"location":"deployment/installation/#configure-the-application","title":"Configure the application","text":"<p>The main application has just one environment configuration file to change.</p> <pre><code>$ cd openex\n</code></pre> <p>Change the application.properties file according to your configuration of PostgreSQL and Minio and to your platform.</p>"},{"location":"deployment/installation/#start-the-application","title":"Start the application","text":"<p>Start the Application:</p> <pre><code>$ java -jar openex-api.jar\n</code></pre> <p>You should now be able to access to the platform using the IP and the port defined in the configuration (by default: http://localhost:8080).</p> <p>The default username and password are:</p> <ul> <li>Login: admin@openex.io</li> <li>Password: admin</li> </ul>"},{"location":"deployment/integrations/","title":"Integrations","text":"<p>Under construction</p> <p>We are doing our best to complete this page.  If you want to participae, dont hesitate to join the Filigran Community on Slack  or submit your pull request on the Github doc repository.</p>"},{"location":"deployment/overview/","title":"Overview","text":"<p>Before starting the installation, let's discover how OpenEx is working, which dependencies are needed and what are the minimal requirements to deploy it in production.</p>"},{"location":"deployment/overview/#architecture","title":"Architecture","text":"<p>The OpenEx platform relies on several external databases and serfvices in order to work.</p> <p></p>"},{"location":"deployment/overview/#platform","title":"Platform","text":"<p>The platform is the central part of the OpenEx platform, allowing users to configure exercises and campaigns as well as systems and players.</p>"},{"location":"deployment/overview/#injectors","title":"Injectors","text":"<p>All injectors are shipped within the platform but are not enabled by default. Injectors are used to interact with third-party applications and services such as social medias, cyber ranges, cybersecurity products, etc.</p> <p>List of connectors</p> <p>You can find all currently available connector in the OpenEx Ecosystem.</p>"},{"location":"deployment/overview/#infrastructure-requirements","title":"Infrastructure requirements","text":""},{"location":"deployment/overview/#dependencies","title":"Dependencies","text":"Component Version CPU RAM Disk type Disk space PostgreSQL \u2265 16.0 2 cores \u2265 8GB SSD \u2265 16GB S3 / MinIO \u2265 RELEASE.2023-02 1 core \u2265 128MB SSD \u2265 16GB"},{"location":"deployment/overview/#platform_1","title":"Platform","text":"Component CPU RAM Disk type Disk space OpenEx Core 2 cores \u2265 8GB None (stateless) -"},{"location":"deployment/resources/","title":"Resources","text":"<p>Under construction</p> <p>We are doing our best to complete this page.  If you want to participae, dont hesitate to join the Filigran Community on Slack  or submit your pull request on the Github doc repository.</p>"},{"location":"deployment/troubleshooting/","title":"Troubleshooting","text":"<p>Under construction</p> <p>We are doing our best to complete this page.  If you want to participae, dont hesitate to join the Filigran Community on Slack  or submit your pull request on the Github doc repository.</p>"},{"location":"deployment/upgrade/","title":"Upgrade","text":"<p>Depending on your installation mode, upgrade path may change.</p> <p>Migrations</p> <p>The platform is taking care of all necessary underlying migrations in the databases if any, you can upgrade OpenEx from any version to the latest one, including skipping multiple major releases.</p>"},{"location":"deployment/upgrade/#using-docker","title":"Using Docker","text":"<p>Before applying this procedure, please update your <code>docker-compose.yml</code> file with the new version number of container images.</p>"},{"location":"deployment/upgrade/#for-single-node-docker","title":"For single node Docker","text":"<pre><code>$ sudo docker-compose stop\n$ sudo docker-compose pull\n$ sudo docker-compose up -d\n</code></pre>"},{"location":"deployment/upgrade/#for-docker-swarm","title":"For Docker swarm","text":"<p>For each of services, you have to run the following command:</p> <pre><code>$ sudo docker service update --force service_name\n</code></pre>"},{"location":"deployment/upgrade/#manual-installation","title":"Manual installation","text":"<p>When upgrading the platform, you have to replace all files and restart the platform, the database migrations will be done automatically:</p> <pre><code>$ java -jar openex-api.jar\n</code></pre>"},{"location":"development/api-usage/","title":"REST API","text":"<p>Under construction</p> <p>We are doing our best to complete this page.  If you want to participae, dont hesitate to join the Filigran Community on Slack  or submit your pull request on the Github doc repository.</p>"},{"location":"development/environment_ubuntu/","title":"Prerequisites Ubuntu","text":"<p>Under construction</p> <p>We are doing our best to complete this page.  If you want to participae, dont hesitate to join the Filigran Community on Slack  or submit your pull request on the Github doc repository.</p>"},{"location":"development/environment_windows/","title":"Prerequisites Windows","text":"<p>Under construction</p> <p>We are doing our best to complete this page.  If you want to participae, dont hesitate to join the Filigran Community on Slack  or submit your pull request on the Github doc repository.</p>"},{"location":"development/injectors/","title":"Injector development","text":"<p>Under construction</p> <p>We are doing our best to complete this page.  If you want to participae, dont hesitate to join the Filigran Community on Slack  or submit your pull request on the Github doc repository.</p>"},{"location":"development/platform/","title":"Platform development","text":"<p>Under construction</p> <p>We are doing our best to complete this page.  If you want to participae, dont hesitate to join the Filigran Community on Slack  or submit your pull request on the Github doc repository.</p>"},{"location":"usage/audiences/","title":"Audiences","text":"<p>Under construction</p> <p>We are doing our best to complete this page.  If you want to participae, dont hesitate to join the Filigran Community on Slack  or submit your pull request on the Github doc repository.</p>"},{"location":"usage/creating/","title":"Creating exercises and campaigns","text":"<p>Under construction</p> <p>We are doing our best to complete this page.  If you want to participae, dont hesitate to join the Filigran Community on Slack  or submit your pull request on the Github doc repository.</p>"},{"location":"usage/exercises/","title":"Exercises","text":"<p>Under construction</p> <p>We are doing our best to complete this page.  If you want to participae, dont hesitate to join the Filigran Community on Slack  or submit your pull request on the Github doc repository.</p>"},{"location":"usage/getting-started/","title":"Getting started","text":"<p>Under construction</p> <p>We are doing our best to complete this page.  If you want to participae, dont hesitate to join the Filigran Community on Slack  or submit your pull request on the Github doc repository.</p>"},{"location":"usage/overview/","title":"Overview","text":"<p>Under construction</p> <p>We are doing our best to complete this page.  If you want to participae, dont hesitate to join the Filigran Community on Slack  or submit your pull request on the Github doc repository.</p>"},{"location":"usage/playing/","title":"Playing","text":"<p>Under construction</p> <p>We are doing our best to complete this page.  If you want to participae, dont hesitate to join the Filigran Community on Slack  or submit your pull request on the Github doc repository.</p>"},{"location":"usage/systems/","title":"Systems","text":"<p>Under construction</p> <p>We are doing our best to complete this page.  If you want to participae, dont hesitate to join the Filigran Community on Slack  or submit your pull request on the Github doc repository.</p>"},{"location":"usage/templates/","title":"Templates","text":""},{"location":"usage/templates/#built-in-variables","title":"Built-In Variables","text":"<p>Within certain injects, users can leverage a set of predefined built-in variables to dynamically customize content. These variables are designed to streamline the process of personalizing messages. Examples of built-in variables include but not limited to :</p> <ul> <li>${user.email}: Represents the email of the target user</li> <li>${exercise.name}: Represents the name of the current exercise</li> <li>${player_uri}: Represents the player interface platform link</li> </ul>"},{"location":"usage/templates/#custom-variables","title":"Custom Variables","text":"<p>In addition to the built-in variables, users can define their own variables within an exercise.</p> <p>To define custom variables :</p> <ol> <li>Select an exercise</li> <li>Navigate to the Definition tab</li> <li>Navigate to the Variables section</li> </ol> <p>In this section, users can create, update or delete custom variables. </p>"},{"location":"usage/templates/#limitation","title":"Limitation","text":"<p>To create custom variables, consider the following limitation:</p> <ul> <li>Only lowercase characters and <code>_</code> are authorized for the key value</li> <li>Variable value can only be string</li> </ul>"},{"location":"usage/templates/#use-variables","title":"Use Variables","text":"<p>These variables can be used to enhance personalization of certain stimuli within an exercise. Here is a non-exhaustive list of concerned stimuli : - Email sending - Sms sending</p> <p></p>"},{"location":"usage/testing/","title":"Testing","text":"<p>Under construction</p> <p>We are doing our best to complete this page.  If you want to participae, dont hesitate to join the Filigran Community on Slack  or submit your pull request on the Github doc repository.</p>"}]}